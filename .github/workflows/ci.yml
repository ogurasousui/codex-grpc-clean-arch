name: CI

on:
  pull_request:
    branches:
      - main

env:
  GO_VERSION: '1.25.3'

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download modules
        run: go mod download

      - name: Run unit tests
        run: go test ./...

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: app_user
          POSTGRES_PASSWORD: app_password
          POSTGRES_DB: app_db
        ports:
          - '15432:5432'
        options: >-
          --health-cmd "pg_isready -U app_user -d app_db"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download modules
        run: go mod download

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 15432 -U app_user -d app_db; then
              exit 0
            fi
            sleep 2
          done
          echo "Postgres did not become ready in time" >&2
          exit 1
        env:
          PGPASSWORD: app_password

      - name: Run migrations
        env:
          CONFIG_PATH: ${{ github.workspace }}/assets/ci.yaml
        run: go run ./cmd/migrate -config "$CONFIG_PATH" up

      - name: Install Atlas CLI
        run: |
          curl -sSf https://release.ariga.io/atlas/install.sh | sh -s -- -b "$HOME/bin"
          echo "$HOME/bin" >> "$GITHUB_PATH"

      - name: Verify schema snapshot
        env:
          DATABASE_URL: postgres://app_user:app_password@127.0.0.1:15432/app_db?sslmode=disable
          ATLAS_NO_UPDATE_CHECK: "true"
        run: |
          set -euo pipefail
          diff_output=$(atlas schema diff \
            --from "$DATABASE_URL" \
            --to file://assets/db/schema.sql \
            --dev-url docker://postgres/16/dev \
            --format '{{ len .Changes }}')
          diff_count=$(echo "$diff_output" | tail -n 1 | tr -d '[:space:]')
          if [ -z "$diff_count" ]; then
            echo "::error::Failed to compute schema diff count" >&2
            atlas schema diff \
              --from "$DATABASE_URL" \
              --to file://assets/db/schema.sql \
              --dev-url docker://postgres/16/dev
            exit 1
          fi
          if [ "$diff_count" != "0" ]; then
            echo "::error::schema.sql is out of sync with the applied migrations. See the diff below." >&2
            atlas schema diff \
              --from "$DATABASE_URL" \
              --to file://assets/db/schema.sql \
              --dev-url docker://postgres/16/dev
            exit 1
          fi

      - name: Run integration tests
        env:
          CONFIG_PATH: ${{ github.workspace }}/assets/ci.yaml
        run: go test -tags=integration ./test/...
