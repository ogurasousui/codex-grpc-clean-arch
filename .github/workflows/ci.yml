name: CI

on:
  pull_request:
    branches:
      - main

env:
  GO_VERSION: '1.25.3'

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download modules
        run: go mod download

      - name: Run unit tests
        run: go test ./...

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: app_user
          POSTGRES_PASSWORD: app_password
          POSTGRES_DB: app_db
        ports:
          - '15432:5432'
        options: >-
          --health-cmd "pg_isready -U app_user -d app_db"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download modules
        run: go mod download

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 15432 -U app_user -d app_db; then
              exit 0
            fi
            sleep 2
          done
          echo "Postgres did not become ready in time" >&2
          exit 1
        env:
          PGPASSWORD: app_password

      - name: Run migrations
        env:
          CONFIG_PATH: ${{ github.workspace }}/assets/ci.yaml
        run: go run ./cmd/migrate -config "$CONFIG_PATH" up

      - name: Run integration tests
        env:
          CONFIG_PATH: ${{ github.workspace }}/assets/ci.yaml
        run: go test -tags=integration ./test/...
