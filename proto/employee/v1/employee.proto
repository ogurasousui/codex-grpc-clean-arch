syntax = "proto3";

package employee.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "user/v1/user.proto";

option go_package = "github.com/ogurasousui/codex-grpc-clean-arch/internal/adapters/grpc/gen/employee/v1;employeepb";

enum EmployeeStatus {
  EMPLOYEE_STATUS_UNSPECIFIED = 0;
  EMPLOYEE_STATUS_ACTIVE = 1;
  EMPLOYEE_STATUS_INACTIVE = 2;
}

message Employee {
  string id = 1;
  string company_id = 2;
  string employee_code = 3;
  reserved 4, 5, 6;
  reserved "email", "last_name", "first_name";
  EmployeeStatus status = 7;
  google.protobuf.StringValue hired_at = 8;
  google.protobuf.StringValue terminated_at = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  string user_id = 12;
  UserSummary user = 13;
}

message UserSummary {
  string id = 1;
  string email = 2;
  string name = 3;
  user.v1.UserStatus status = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateEmployeeRequest {
  string company_id = 1;
  string employee_code = 2;
  reserved 3, 4, 5;
  reserved "email", "last_name", "first_name";
  EmployeeStatus status = 6;
  google.protobuf.StringValue hired_at = 7;
  google.protobuf.StringValue terminated_at = 8;
  string user_id = 9;
}

message CreateEmployeeResponse {
  Employee employee = 1;
}

message GetEmployeeRequest {
  string id = 1;
}

message GetEmployeeResponse {
  Employee employee = 1;
}

message ListEmployeesRequest {
  string company_id = 1;
  int32 page_size = 2;
  string page_token = 3;
  EmployeeStatus status = 4;
}

message ListEmployeesResponse {
  repeated Employee employees = 1;
  string next_page_token = 2;
}

message UpdateEmployeeRequest {
  string id = 1;
  google.protobuf.StringValue employee_code = 2;
  reserved 3, 4, 5;
  reserved "email", "last_name", "first_name";
  EmployeeStatus status = 6;
  google.protobuf.StringValue hired_at = 7;
  google.protobuf.StringValue terminated_at = 8;
  google.protobuf.StringValue user_id = 9;
}

message UpdateEmployeeResponse {
  Employee employee = 1;
}

message DeleteEmployeeRequest {
  string id = 1;
}

message DeleteEmployeeResponse {}

service EmployeeService {
  rpc CreateEmployee(CreateEmployeeRequest) returns (CreateEmployeeResponse);
  rpc GetEmployee(GetEmployeeRequest) returns (GetEmployeeResponse);
  rpc ListEmployees(ListEmployeesRequest) returns (ListEmployeesResponse);
  rpc UpdateEmployee(UpdateEmployeeRequest) returns (UpdateEmployeeResponse);
  rpc DeleteEmployee(DeleteEmployeeRequest) returns (DeleteEmployeeResponse);
}
